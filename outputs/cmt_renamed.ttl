@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix rml: <http://semweb.mmlab.be/ns/rml#>.
@prefix ql: <http://semweb.mmlab.be/ns/ql#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix cmt: <http://cmt#>.
@prefix : <http://cmt#> .
@prefix brick: <https://brickschema.org/schema/Brick#> .
@prefix csvw: <http://www.w3.org/ns/csvw#> .
@prefix dc: <http://purl.org/dc/elements/1.1/> .
@prefix dcam: <http://purl.org/dc/dcam/> .
@prefix dcat: <http://www.w3.org/ns/dcat#> .
@prefix dcmitype: <http://purl.org/dc/dcmitype/> .
@prefix dcterms: <http://purl.org/dc/terms/> .
@prefix doap: <http://usefulinc.com/ns/doap#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix odrl: <http://www.w3.org/ns/odrl/2/> .
@prefix org: <http://www.w3.org/ns/org#> .
@prefix owl: <http://www.w3.org/2002/07/owl#> .
@prefix prof: <http://www.w3.org/ns/dx/prof/> .
@prefix protege: <http://protege.stanford.edu/plugins/owl/protege#> .
@prefix prov: <http://www.w3.org/ns/prov#> .
@prefix qb: <http://purl.org/linked-data/cube#> .
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix schema: <https://schema.org/> .
@prefix sh: <http://www.w3.org/ns/shacl#> .
@prefix skos: <http://www.w3.org/2004/02/skos/core#> .
@prefix sosa: <http://www.w3.org/ns/sosa/> .
@prefix ssn: <http://www.w3.org/ns/ssn/> .
@prefix swrl: <http://www.w3.org/2003/11/swrl#> .
@prefix swrlb: <http://www.w3.org/2003/11/swrlb#> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix vann: <http://purl.org/vocab/vann/> .
@prefix void: <http://rdfs.org/ns/void#> .
@prefix xml: <http://www.w3.org/XML/1998/namespace> .
@prefix xsd: <http://www.w3.org/2001/XMLSchema#> .
@prefix xsp: <http://www.owl-ontologies.com/2005/08/07/xsp.owl#> .
@base <http://cmt#> .
<#Acceptance>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "decisions";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Acceptance/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:Acceptance
         ].
<#Administrator>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "administrators";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Administrator/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:Administrator
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rml:reference "id"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:acceptPaper;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Paper>;
                         rr:joinCondition [
                                 rr:child "accept_paper";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:addProgramCommitteeMember;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#ProgramCommitteeMember>;
                         rr:joinCondition [
                                 rr:child "id";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:rejectPaper;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Paper>;
                         rr:joinCondition [
                                 rr:child "id";
                                 rr:parent "rejected";
                         ];
                 ];
         ].
<#assignReviewer>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "paper_reviewer";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Administrator/{pid}";
                 rr:termType rr:IRI;
                 rr:class cmt:Administrator
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:assignReviewer;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#User>;
                         rr:joinCondition [
                                 rr:child "rid";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:assignReviewer;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Person>;
                         rr:joinCondition [
                                 rr:child "rid";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:assignReviewer;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Meta-Reviewer>;
                         rr:joinCondition [
                                 rr:child "rid";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:assignReviewer;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Reviewer>;
                         rr:joinCondition [
                                 rr:child "rid";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#enableVirtualMeeting>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "enable_virtual_meeting";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Administrator/{aid}";
                 rr:termType rr:IRI;
                 rr:class cmt:Administrator
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:enableVirtualMeeting;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Conference>;
                         rr:joinCondition [
                                 rr:child "cid";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#enterReviewCriteria>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "enter_review_criteria";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Administrator/{aid}";
                 rr:termType rr:IRI;
                 rr:class cmt:Administrator
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:enterReviewCriteria;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Conference>;
                         rr:joinCondition [
                                 rr:child "cid";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#finalizePaperAssignment>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "finalize_paper_assignment";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Administrator/{aid}";
                 rr:termType rr:IRI;
                 rr:class cmt:Administrator
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:finalizePaperAssignment;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Conference>;
                         rr:joinCondition [
                                 rr:child "cid";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#setMaxPapers>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "set_max_papers";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Administrator/{administrator}";
                 rr:termType rr:IRI;
                 rr:class cmt:Administrator
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:setMaxPapers;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Person>;
                         rr:joinCondition [
                                 rr:child "program_committee_member";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:setMaxPapers;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Person>;
                         rr:joinCondition [
                                 rr:child "program_committee_member";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:setMaxPapers;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#ProgramCommitteeChair>;
                         rr:joinCondition [
                                 rr:child "program_committee_member";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:setMaxPapers;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#ProgramCommitteeMember>;
                         rr:joinCondition [
                                 rr:child "program_committee_member";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#Associated Chair>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "persons";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#AssociatedChair/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:AssociatedChair
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rml:reference "email"; rr:datatype xsd:string];
         ].
<#Author>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "authors";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Author/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:Author
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rml:reference "id"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:writePaper;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Paper>;
                         rr:joinCondition [
                                 rr:child "id";
                                 rr:parent "author";
                         ];
                 ];
         ].
<#submitPaper>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "co_write_paper";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Author/{co_author}";
                 rr:termType rr:IRI;
                 rr:class cmt:Author
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:submitPaper;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Document>;
                         rr:joinCondition [
                                 rr:child "paper";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:submitPaper;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#PaperFullVersion>;
                         rr:joinCondition [
                                 rr:child "paper";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:submitPaper;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Paper>;
                         rr:joinCondition [
                                 rr:child "paper";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#Author not Reviewer>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "authors";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#AuthorNotReviewer/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:AuthorNotReviewer
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rml:reference "id"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:writePaper;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Paper>;
                         rr:joinCondition [
                                 rr:child "id";
                                 rr:parent "read_by_meta_reviewer";
                         ];
                 ];
         ].
<#Bid>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "bids";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Bid/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:Bid
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:adjustedBy;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Reviewer>;
                         rr:joinCondition [
                                 rr:child "adjusted";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#Chairman>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "persons";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Chairman/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:Chairman
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rml:reference "email"; rr:datatype xsd:string];
         ].
<#Co-author>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "authors";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Co-author/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:Co-author
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rml:reference "id"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:writePaper;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Paper>;
                         rr:joinCondition [
                                 rr:child "id";
                                 rr:parent "author";
                         ];
                 ];
         ].
<#co-writePaper>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "co_write_paper";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Co-author/{co_author}";
                 rr:termType rr:IRI;
                 rr:class cmt:Co-author
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:co-writePaper;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Document>;
                         rr:joinCondition [
                                 rr:child "paper";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:co-writePaper;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#PaperFullVersion>;
                         rr:joinCondition [
                                 rr:child "paper";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:co-writePaper;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Paper>;
                         rr:joinCondition [
                                 rr:child "paper";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#Conference>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "conferences";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Conference/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:Conference
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:acceptsHardcopySubmissions;
                 rr:objectMap [ rml:reference "accepts_hardcopy_submissions"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:date;
                 rr:objectMap [ rml:reference "date"; rr:datatype xsd:date];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:logoURL;
                 rr:objectMap [ rml:reference "logo_url"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:reviewsPerPaper;
                 rr:objectMap [ rml:reference "reviews_per_paper"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:siteURL;
                 rr:objectMap [ rml:reference "site_url"; rr:datatype xsd:string];
         ].
<#detailsEnteredBy>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "details_entered";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Conference/{cid}";
                 rr:termType rr:IRI;
                 rr:class cmt:Conference
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:detailsEnteredBy;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#User>;
                         rr:joinCondition [
                                 rr:child "aid";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:detailsEnteredBy;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Person>;
                         rr:joinCondition [
                                 rr:child "aid";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:detailsEnteredBy;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Administrator>;
                         rr:joinCondition [
                                 rr:child "aid";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#hasConferenceMember>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "conference_members";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Conference/{conference}";
                 rr:termType rr:IRI;
                 rr:class cmt:Conference
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:hasConferenceMember;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Person>;
                         rr:joinCondition [
                                 rr:child "conference_member";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:hasConferenceMember;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Reviewer>;
                         rr:joinCondition [
                                 rr:child "conference_member";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:hasConferenceMember;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#ConferenceMember>;
                         rr:joinCondition [
                                 rr:child "conference_member";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#paperAssignmentToolsRunBy>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "paper_assignment_tools_run";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Conference/{cid}";
                 rr:termType rr:IRI;
                 rr:class cmt:Conference
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:paperAssignmentToolsRunBy;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#User>;
                         rr:joinCondition [
                                 rr:child "aid";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:paperAssignmentToolsRunBy;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Person>;
                         rr:joinCondition [
                                 rr:child "aid";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:paperAssignmentToolsRunBy;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Administrator>;
                         rr:joinCondition [
                                 rr:child "aid";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#reviewerBiddingStartedBy>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "reviewer_bidding_started";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Conference/{cid}";
                 rr:termType rr:IRI;
                 rr:class cmt:Conference
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:reviewerBiddingStartedBy;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#User>;
                         rr:joinCondition [
                                 rr:child "aid";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:reviewerBiddingStartedBy;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Person>;
                         rr:joinCondition [
                                 rr:child "aid";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:reviewerBiddingStartedBy;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Administrator>;
                         rr:joinCondition [
                                 rr:child "aid";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#Conference Chair>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "persons";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#ConferenceChair/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:ConferenceChair
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rml:reference "email"; rr:datatype xsd:string];
         ].
<#Conference Member>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "persons";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#ConferenceMember/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:ConferenceMember
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rml:reference "email"; rr:datatype xsd:string];
         ].
<#memberOfConference>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "person_conference";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#ConferenceMember/{cid}";
                 rr:termType rr:IRI;
                 rr:class cmt:ConferenceMember
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:memberOfConference;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Conference>;
                         rr:joinCondition [
                                 rr:child "cid";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#Decision>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "decisions";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Decision/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:Decision
         ].
<#Document>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "documents";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Document/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:Document
         ].
<#External Reviewer>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "persons";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#ExternalReviewer/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:ExternalReviewer
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rml:reference "email"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:assignedByReviewer;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Reviewer>;
                         rr:joinCondition [
                                 rr:child "assigned_by_reviewer";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#Meta-Review>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "reviews";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Meta-Review/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:Meta-Review
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:writtenBy;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Reviewer>;
                         rr:joinCondition [
                                 rr:child "written";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#Meta-Reviewer>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "reviewers";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Meta-Reviewer/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:Meta-Reviewer
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rml:reference "id"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:adjustBid;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Bid>;
                         rr:joinCondition [
                                 rr:child "id";
                                 rr:parent "adjusted";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:assignExternalReviewer;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#ExternalReviewer>;
                         rr:joinCondition [
                                 rr:child "id";
                                 rr:parent "reviewer";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:writeReview;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Review>;
                         rr:joinCondition [
                                 rr:child "id";
                                 rr:parent "reviewer";
                         ];
                 ];
         ].
<#Paper>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "papers";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Paper/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:Paper
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:paperID;
                 rr:objectMap [ rml:reference "paper_id"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:title;
                 rr:objectMap [ rml:reference "title"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:acceptedBy;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Administrator>;
                         rr:joinCondition [
                                 rr:child "accepted";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:hasAuthor;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Author>;
                         rr:joinCondition [
                                 rr:child "author";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:hasDecision;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Decision>;
                         rr:joinCondition [
                                 rr:child "decision";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:readByMeta-Reviewer;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Meta-Reviewer>;
                         rr:joinCondition [
                                 rr:child "read_by_meta_reviewer";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:rejectedBy;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Administrator>;
                         rr:joinCondition [
                                 rr:child "rejected";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:hasBid;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Bid>;
                         rr:joinCondition [
                                 rr:child "id";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#assignedTo>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "bids";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Paper/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:Paper
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:assignedTo;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#User>;
                         rr:joinCondition [
                                 rr:child "id";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:assignedTo;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Person>;
                         rr:joinCondition [
                                 rr:child "id";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:assignedTo;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Meta-Reviewer>;
                         rr:joinCondition [
                                 rr:child "id";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:assignedTo;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Reviewer>;
                         rr:joinCondition [
                                 rr:child "id";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#hasCo-author>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "paper_author";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Paper/{aid}";
                 rr:termType rr:IRI;
                 rr:class cmt:Paper
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:hasCo-author;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Author>;
                         rr:joinCondition [
                                 rr:child "aid";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:hasCo-author;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#User>;
                         rr:joinCondition [
                                 rr:child "aid";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:hasCo-author;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Person>;
                         rr:joinCondition [
                                 rr:child "aid";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:hasCo-author;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Co-author>;
                         rr:joinCondition [
                                 rr:child "aid";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#hasSubjectArea>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "paper_subject_area";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Paper/{pid}";
                 rr:termType rr:IRI;
                 rr:class cmt:Paper
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:hasSubjectArea;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#SubjectArea>;
                         rr:joinCondition [
                                 rr:child "sid";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#readByReviewer>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "read_by_reviewer";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Paper/{paper}";
                 rr:termType rr:IRI;
                 rr:class cmt:Paper
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:readByReviewer;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#User>;
                         rr:joinCondition [
                                 rr:child "reviewer";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:readByReviewer;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Person>;
                         rr:joinCondition [
                                 rr:child "reviewer";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:readByReviewer;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Meta-Reviewer>;
                         rr:joinCondition [
                                 rr:child "reviewer";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:readByReviewer;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Reviewer>;
                         rr:joinCondition [
                                 rr:child "reviewer";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#Paper Abstract>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "papers";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#PaperAbstract/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:PaperAbstract
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:paperID;
                 rr:objectMap [ rml:reference "paper_id"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:title;
                 rr:objectMap [ rml:reference "title"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:acceptedBy;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Administrator>;
                         rr:joinCondition [
                                 rr:child "accepted";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:hasAuthor;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Author>;
                         rr:joinCondition [
                                 rr:child "author";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:hasDecision;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Decision>;
                         rr:joinCondition [
                                 rr:child "decision";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:readByMeta-Reviewer;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Meta-Reviewer>;
                         rr:joinCondition [
                                 rr:child "read_by_meta_reviewer";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:rejectedBy;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Administrator>;
                         rr:joinCondition [
                                 rr:child "rejected";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:hasBid;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Bid>;
                         rr:joinCondition [
                                 rr:child "id";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#Paper Full Version>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "papers";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#PaperFullVersion/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:PaperFullVersion
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:paperID;
                 rr:objectMap [ rml:reference "paper_id"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:title;
                 rr:objectMap [ rml:reference "title"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:acceptedBy;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Administrator>;
                         rr:joinCondition [
                                 rr:child "accepted";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:hasAuthor;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Author>;
                         rr:joinCondition [
                                 rr:child "author";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:hasDecision;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Decision>;
                         rr:joinCondition [
                                 rr:child "decision";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:readByMeta-Reviewer;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Meta-Reviewer>;
                         rr:joinCondition [
                                 rr:child "read_by_meta_reviewer";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:rejectedBy;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Administrator>;
                         rr:joinCondition [
                                 rr:child "rejected";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:hasBid;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Bid>;
                         rr:joinCondition [
                                 rr:child "id";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#Person>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "persons";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Person/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:Person
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rml:reference "email"; rr:datatype xsd:string];
         ].
<#hasConflictOfInterest>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "mark_conflict_interests";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Person/{paper}";
                 rr:termType rr:IRI;
                 rr:class cmt:Person
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:hasConflictOfInterest;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Review>;
                         rr:joinCondition [
                                 rr:child "paper";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:hasConflictOfInterest;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#PaperFullVersion>;
                         rr:joinCondition [
                                 rr:child "paper";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:hasConflictOfInterest;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Document>;
                         rr:joinCondition [
                                 rr:child "paper";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#Preference>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "preferences";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Preference/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:Preference
         ].
<#Program Committee>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "program_committees";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#ProgramCommittee/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:ProgramCommittee
         ].
<#hasProgramCommitteeMember>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "program_committee_members";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#ProgramCommittee/{program_committee}";
                 rr:termType rr:IRI;
                 rr:class cmt:ProgramCommittee
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:hasProgramCommitteeMember;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Person>;
                         rr:joinCondition [
                                 rr:child "program_committee_member";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:hasProgramCommitteeMember;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Person>;
                         rr:joinCondition [
                                 rr:child "program_committee_member";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:hasProgramCommitteeMember;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#ProgramCommitteeChair>;
                         rr:joinCondition [
                                 rr:child "program_committee_member";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:hasProgramCommitteeMember;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#ProgramCommitteeMember>;
                         rr:joinCondition [
                                 rr:child "program_committee_member";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#Program Committee Chair>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "persons";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#ProgramCommitteeChair/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:ProgramCommitteeChair
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rml:reference "email"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rml:reference "email"; rr:datatype xsd:string];
         ].
<#endReview>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "reviews";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#ProgramCommitteeChair/{written}";
                 rr:termType rr:IRI;
                 rr:class cmt:ProgramCommitteeChair
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:endReview;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Document>;
                         rr:joinCondition [
                                 rr:child "id";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:endReview;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Meta-Review>;
                         rr:joinCondition [
                                 rr:child "id";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:endReview;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Review>;
                         rr:joinCondition [
                                 rr:child "id";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#Porgram Committee Member>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "persons";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#ProgramCommitteeMember/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:ProgramCommitteeMember
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rml:reference "email"; rr:datatype xsd:string];
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rml:reference "email"; rr:datatype xsd:string];
         ].
<#addedBy>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "bids";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#ProgramCommitteeMember/{adjusted}";
                 rr:termType rr:IRI;
                 rr:class cmt:ProgramCommitteeMember
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:addedBy;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#User>;
                         rr:joinCondition [
                                 rr:child "adjusted";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:addedBy;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Person>;
                         rr:joinCondition [
                                 rr:child "adjusted";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:addedBy;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Administrator>;
                         rr:joinCondition [
                                 rr:child "adjusted";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#Rejection>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "decisions";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Rejection/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:Rejection
         ].
<#Review>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "reviews";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Review/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:Review
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:writtenBy;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Reviewer>;
                         rr:joinCondition [
                                 rr:child "written";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#Reviewer>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "reviewers";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Reviewer/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:Reviewer
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rml:reference "id"; rr:datatype xsd:integer];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:adjustBid;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Bid>;
                         rr:joinCondition [
                                 rr:child "id";
                                 rr:parent "adjusted";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:assignExternalReviewer;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#ExternalReviewer>;
                         rr:joinCondition [
                                 rr:child "id";
                                 rr:parent "reviewer";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:writeReview;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Review>;
                         rr:joinCondition [
                                 rr:child "id";
                                 rr:parent "reviewer";
                         ];
                 ];
         ].
<#readPaper>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "papers";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#Reviewer/{rejected}";
                 rr:termType rr:IRI;
                 rr:class cmt:Reviewer
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:readPaper;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Document>;
                         rr:joinCondition [
                                 rr:child "paper_id";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:readPaper;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#PaperFullVersion>;
                         rr:joinCondition [
                                 rr:child "paper_id";
                                 rr:parent "id";
                         ];
                 ];
         ];
         rr:predicateObjectMap [
                 rr:predicateMap [
                         a rr:PredicateMap;
                         rr:constant cmt:readPaper;
                 ];
                 rr:objectMap [
                         a rr:RefObjectMap;
                         rr:parentTriplesMap <#Paper>;
                         rr:joinCondition [
                                 rr:child "paper_id";
                                 rr:parent "id";
                         ];
                 ];
         ].
<#Subject Area>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "subject_areas";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#SubjectArea/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:SubjectArea
         ].
<#User>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "persons";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#User/{id}";
                 rr:termType rr:IRI;
                 rr:class cmt:User
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:email;
                 rr:objectMap [ rml:reference "email"; rr:datatype xsd:string];
         ].
<#Review>
         rml:logicalSource [
                 rml:source "<#DB_source>";
                 rr:tableName "persons";
         ];
         rr:subjectMap [
                 rr:template "http://cmt#//conference#Review/{id}";
                 rr:termType rr:IRI;
                 rr:class http://conference#Review
         ];
         rr:predicateObjectMap [
                 rr:predicate cmt:review;
                 rr:objectMap [ rml:reference "reviewer"; rr:datatype xsd:string];
         ].
